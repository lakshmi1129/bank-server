



                        Server creation - node js Express js


            1. Create a folder for Server
            2. Create package.json file :   npm init
            3. Create index.js file
            4. Install express :  npm i express
            5. Import express in index.js file
            6. Create server application using express
            7. Define port for the server application
            8. To resolve http request from application
            9. To connect Database with server
                    -   Install mongoose :  npm i mongoose
                    -   Import mongoose in db.js file
                    -   using mongoose define the connection string
                    -   Create a model to store data in db collection
                    -   Export model
            10. To parse json data to js using express
                    -   server-app.use(express.json())

            11. Response status code -
                - 1XX - information
                - 2xx - success
                - 3xx - redirection
                - 4xx - client error
                - 5xx - Server error

            12. Install CORS -Cross Origine Resource Sharing and define the origin inside server app
                    -npn i cors
                    -import cors inside index.js
                    -using cors define origine


        13.Authentication using JWT (Json Web Token) Token
                -Install jsontoken: npm i jsonwebtoken
                -using Jsonwebtoken, to generate Token
                        1. import jsonwebtoken in dataservice.js file
                        2. when login successful then generate token - sign()
                        3. sent token to client
                - using jsonwebtoken we have to verify the token for request after login
                        1. import jsonwebtoken in index.js
                        2. create router specific middleware to verify token - verify()
        
        14. Middleware - to affect request - response cycle
                - application specific Middleware - execute before all requests in the application
                - router specific Middleware

 



